require 'spec_helper'

describe OpenDotaApi::Explorer do
  let(:explorer_file) { File.read('spec/data/explorer.json') }
  let(:response_json) { JSON.parse(explorer_file) }
  let(:explorer) { OpenDotaApi::Explorer.new(response_json) }

  let(:match_ids) { [3274329415, 3274330770, 3274393974, 3274394099, 3274481444, 3274481930, 3274557442, 3274564960, 3274667512, 3274669416, 3274794292, 3274794810, 3274795436, 3274800531, 3274804698, 3274816116, 3274904832, 3274904857, 3274908009, 3274927926, 3274935013, 3274946646, 3275011120, 3275012710, 3275038059, 3275045676, 3275056852, 3275066534, 3275108399, 3275124185, 3275178718, 3275183011, 3275206476, 3275248394, 3275276589, 3275297767, 3275340129, 3275351174, 3275399089, 3275405570, 3275412980, 3275492852, 3275546909, 3275549361, 3275553729, 3275563733, 3275667950, 3275683703, 3275686186, 3275689511, 3275695734, 3275738929, 3275764122, 3275790914, 3275808176, 3275808794, 3275810358, 3275824679, 3275825273, 3275836033, 3275918719, 3275918851, 3275921467, 3275927474, 3275929302, 3275931259, 3275933008, 3275935059, 3276010559, 3276013632, 3276014675, 3276025150, 3276025304, 3276025580, 3276027917, 3276054262, 3276084732, 3276090822, 3276098324, 3276104603, 3276105966, 3276111372, 3276129449, 3276156941, 3276160699, 3276169834, 3276224443, 3276226816, 3276229201, 3276246388, 3276278414, 3276279242, 3276281606, 3276294301, 3276330348, 3276333514, 3276365045, 3276376431, 3276384723, 3276392063, 3276393333, 3276393537, 3276393725, 3276395433, 3276431065, 3276432556, 3276441192, 3276453310, 3276455223, 3276456688, 3276461749, 3276481968, 3276494966, 3276519753, 3276522925, 3276529430, 3276531419, 3276543914, 3276548322, 3276550251, 3276550380, 3276585443, 3276594961, 3276616978, 3276619671, 3276630734, 3276678806, 3276680686, 3276692247, 3276727833, 3276779761, 3276799406, 3276816257, 3276818595, 3276819192, 3276819345, 3276820653, 3276828390, 3276896729, 3276908672, 3276934942, 3276935233, 3276940060, 3276945212, 3276957488, 3277009111, 3277010065, 3277032932, 3277054034, 3277066837, 3277071048, 3277076708, 3277122831, 3277141049, 3277147265, 3277169467, 3277175546, 3277179017, 3277209959, 3277270406, 3277283501, 3277285990, 3277286209, 3277297305, 3277312254, 3277331491, 3277360472, 3277383440, 3277430053, 3277445396, 3277457495, 3277502885, 3277526459, 3277530246, 3277565388, 3277585436, 3277609129, 3277642650, 3277677016, 3277691703, 3277707782, 3277730855, 3277744144, 3277769947, 3277794775, 3277799119, 3277816670, 3277830387, 3277831396, 3277853682, 3277867284, 3277897323, 3277905327, 3277914056, 3277922412, 3277928310, 3277934674, 3277937287, 3277974563, 3277991178, 3278008510, 3278010775, 3278014140, 3278015358, 3278019014, 3278061206, 3278080836, 3278082996, 3278110163, 3278114602, 3278118753, 3278137461, 3278171855, 3278176063, 3278177232, 3278232189, 3278238643, 3278239231, 3278246661, 3278279523, 3278288580, 3278304193, 3278313560, 3278320383, 3278326373, 3278365944, 3278370778, 3278387472, 3278401709, 3278401845, 3278441447, 3278449546, 3278455612, 3278458053, 3278458756, 3278470259, 3278498607, 3278534680, 3278536469, 3278548190, 3278549233, 3278554450, 3278590724, 3278601446, 3278604624, 3278648453, 3278675143, 3278690226, 3278691461, 3278691759, 3278707616, 3278764475, 3278779071, 3278794972, 3278815320, 3278885465, 3278894409, 3278898021, 3278913507, 3278913764, 3278950978, 3279022993, 3279027482, 3279029922, 3279048358, 3279141603, 3279158362, 3279170185, 3279200648, 3279245214, 3279270347, 3279296457, 3279344693, 3279352903, 3279392401, 3279441980, 3279449712, 3279564078, 3279586792, 3279683317, 3279718819, 3279723634, 3279800052, 3279814904, 3279862926, 3279901754, 3279907240, 3279952775, 3279990287, 3280002255, 3280092629, 3280117786, 3280169747, 3280170927, 3280219317, 3280290578, 3280349437, 3280437500, 3280440654, 3280495952, 3280507299, 3280520447, 3280569987, 3280581397, 3280624478, 3280678605, 3280710379, 3280779062, 3280816387, 3280868403, 3280916901, 3280917061, 3280960198, 3280962519, 3281023107, 3281036396, 3281076896, 3281132641, 3281159627, 3281300755, 3281304392, 3281439600, 3281467339, 3281628099, 3281703281, 3281724378, 3281780707, 3281806883, 3281853891, 3281917774, 3281979282, 3281992071, 3282010340, 3282062366, 3282102427, 3282193242, 3282203829, 3282243909, 3282263076, 3282300073, 3282333669, 3282412777, 3282475291, 3282551966, 3282553363, 3282621169, 3282763119, 3282839690, 3351961375, 3351963840, 3351973181, 3351993496, 3352043080, 3352045427, 3352061045, 3352100275, 3352104337, 3352119361, 3352140562, 3352153962, 3352163167, 3352190511, 3352200165, 3352220260, 3352237075, 3352267755, 3352275698, 3352286942, 3352291980, 3352320088, 3352323980, 3352327788, 3352328440, 3352363731, 3352367990, 3352382741, 3352383050, 3352405556, 3352409888, 3352416060, 3352427223, 3352455755, 3352461389, 3352462460, 3352464853, 3352501269, 3352505678, 3352509754, 3353737069, 3353737967, 3353738510, 3353742932, 3353837163, 3353838092, 3353841477, 3353852872, 3353901258, 3353916502, 3353935010, 3353935410, 3353989523, 3353994974, 3354000170, 3354031843, 3354057627, 3354058128, 3354063346, 3354101340, 3354118306, 3354120039, 3354123160, 3354159000, 3354162376, 3354167956, 3354180190, 3354210396, 3354214459, 3354219214, 3354220626, 3354247448, 3354249527, 3354284596, 3354286673, 3354292598, 3354297698, 3354333670, 3354341710, 3354345479, 3355640875, 3355646788, 3355653623, 3355657953, 3355741305, 3355751279, 3355751343, 3355760651, 3355805274, 3355838924, 3355853872, 3355859622, 3355887483, 3355934709, 3355938154, 3355944219, 3355980143, 3356007093, 3356009819, 3356035808, 3356044327, 3356066834, 3356083896, 3356100221, 3356102779, 3356137447, 3356148145, 3356160859, 3356189302, 3356203606, 3356203915, 3356214219, 3356245174, 3356251885, 3356260301, 3356274394, 3356308437, 3356321398, 3356371427, 3356461133, 3357766680, 3357776843, 3357776957, 3357781916, 3357885749, 3357890369, 3357892393, 3357952027, 3357974421, 3357986778, 3358011344, 3358044227, 3358068997, 3358069339, 3358105051, 3358109772, 3358153024, 3358157593, 3358183864, 3358205135, 3358228417, 3358232771, 3358237109, 3358299746, 3362113115, 3362175204, 3362247584, 3362331228, 3362390555, 3362458643, 3362526195, 3362609879, 3362675038, 3363973439, 3364084016, 3364162010, 3364210383, 3364267872, 3364308762, 3364351128, 3364409216, 3364482110, 3365858882, 3365946637, 3366042233, 3366096005, 3366166505, 3366236403, 3366289447, 3366363258, 3366419778, 3367820228, 3367897602, 3367983348, 3368083254, 3368158118, 3368249009, 3368300783, 3368387319, 3369858045, 3369930606, 3370054178, 3370154221, 3370213472, 3370307979, 3370363807, 3372269708, 3372386596, 3372455628, 3372622939, 3372676225, 3372726385]
  }

  let(:api_url) { "http://api.opendota.com/api/#{endpoint}" }


  it 'returns endpoint' do
    expect(described_class::ENDPOINT).to eq 'explorer'
  end

  it 'inherits entity object' do
    expect(match_ids).to be_a Array
  end

  describe 'default attributes' do
    it 'returns id' do
      expect(explorer.league_matches_ids).to match_array(match_ids)
    end
  end
end